#Option 1: Load the Dataset from scikit-learn (Recommended)
python
Copy code
import pandas as pd
from sklearn.datasets import load_boston

# Load the dataset from sklearn
boston_data = load_boston()

# Create a DataFrame
df = pd.DataFrame(boston_data.data, columns=boston_data.feature_names)
df['Price'] = boston_data.target

# Save the DataFrame to CSV
df.to_csv('boston_houses.csv', index=False)
print("boston_houses.csv has been created successfully.")
This code will:

Load the Boston housing dataset using load_boston() from sklearn.datasets.
Convert it into a DataFrame with features and target columns.
Save it as boston_houses.csv in your working directory.




#main code 

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import Ridge, Lasso
from sklearn.metrics import mean_squared_error

# Step 1: Load the dataset (assuming 'boston_houses.csv' is the correct path)
df = pd.read_csv('boston_houses.csv')

# Step 2: Select only 'RM' and 'Price' columns
df = df[['RM', 'Price']]

# Step 3: Split the data into features (X) and target (y)
X = df[['RM']]  # Feature: number of rooms (RM)
y = df['Price']  # Target: price of the house

# Step 4: Split the dataset into training and testing data (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Initialize and train the Ridge Regression model
ridge_model = Ridge(alpha=1.0)
ridge_model.fit(X_train, y_train)

# Step 6: Initialize and train the Lasso Regression model
lasso_model = Lasso(alpha=0.1)
lasso_model.fit(X_train, y_train)

# Step 7: Predict the price for a house with 5 rooms using both models
price_ridge = ridge_model.predict([[5]])  # Predict price for 5 rooms (Ridge)
price_lasso = lasso_model.predict([[5]])  # Predict price for 5 rooms (Lasso)

# Step 8: Print the predicted prices for both models
print(f"Predicted price using Ridge Regression (5 rooms): ${price_ridge[0]:.2f}")
print(f"Predicted price using Lasso Regression (5 rooms): ${price_lasso[0]:.2f}")

# Step 9: Evaluate the models on the test data (optional)
ridge_predictions = ridge_model.predict(X_test)
lasso_predictions = lasso_model.predict(X_test)

# Compute the Mean Squared Error for both models
ridge_mse = mean_squared_error(y_test, ridge_predictions)
lasso_mse = mean_squared_error(y_test, lasso_predictions)

print(f"Ridge Regression MSE: {ridge_mse:.2f}")
print(f"Lasso Regression MSE: {lasso_mse:.2f}")
