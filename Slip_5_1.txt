#csv file 

Engine Size,Weight,Year,Fuel Consumption
2.0,1500,2015,8.0
2.5,1800,2016,7.5
3.0,2000,2017,6.0
3.5,2200,2018,5.5
1.8,1400,2014,9.0
2.2,1600,2015,8.5
2.8,2100,2017,6.5



#actual code

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset (you can replace this with your own CSV file)
# For this example, we will simulate a small dataset
data = {
    'Engine Size': [2.0, 2.5, 3.0, 3.5, 1.8, 2.2, 2.8],
    'Weight': [1500, 1800, 2000, 2200, 1400, 1600, 2100],
    'Year': [2015, 2016, 2017, 2018, 2014, 2015, 2017],
    'Fuel Consumption': [8.0, 7.5, 6.0, 5.5, 9.0, 8.5, 6.5]  # Target variable
}

# Create a DataFrame from the data
df = pd.DataFrame(data)

# Display the first few rows of the dataset
print("Dataset:")
print(df)

# Features (independent variables)
X = df[['Engine Size', 'Weight', 'Year']]

# Target (dependent variable)
y = df['Fuel Consumption']

# Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Multiple Linear Regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Make predictions using the testing data
y_pred = model.predict(X_test)

# Print the coefficients (weights) and intercept
print("\nModel Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)

# Evaluate the model using R-squared and Mean Squared Error
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print(f"\nR-squared: {r2}")
print(f"Mean Squared Error: {mse}")

# Plotting the actual vs predicted fuel consumption
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Fuel Consumption')
plt.ylabel('Predicted Fuel Consumption')
plt.title('Actual vs Predicted Fuel Consumption')
plt.show()
